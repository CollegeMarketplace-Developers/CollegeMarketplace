Git Branch usage for CM 

Create Private Branch:  
    1. git checkout master 

    2. git pull 
    
    3. git checkout -b <YourBranchName>
    
    4. git branch --set-upstream-to=origin/master <YourBranchName>

Make Changes to Private Branch, Then Commit: 
    1. git checkout <YourBranchName>
        - NOTE: only do this step if you are not already on <YourBranchName>
        - a quick way to check which branch you are on is: git status 

    2. git pull 
    
    3. git add <filename>
        - you must do the above step for each file you changed 
    
    4. git commit -m "your comments"
    
    5. git push origin <YourBranchName>

Add Changes to Master Branch 
    - You can do this two ways
    
    1. You can make a pull request on github and if the branch can be automatically merged, then it will be "highlighted green". Wait for reviewers to approve merge request 

    2. If your changes can't be merged automatically aka you have merge conflicts, then do the following in git terminal.
        
        2.1 git checkout <YourBranchName>
        2.2 git pull 
        2.3 git checkout master 
        2.4 git pull 
        2.5 git merge --squash <YourBranchName>
            (Resolve Any conflicts, do 'git add' on conflicted files after resolving conflicts)
        2.6 git commit -m "Your comments"
        2.7 git push origin master


--------------------------------------------------------------------

Reverting Branch to an older commit: 
- To revert to a commit that's older than the most recent commit:

1) checkout to the branch
git checkout {branch name}

2) git log to see all previous commits to respective branch
git log

3) Resets index to former commit; replace '56e05fced' with your commit code
git reset {56e05fced} 

4) Moves pointer back to previous HEAD
git reset --soft HEAD@{1}

5) git commit with custom message for example the following, replace the hash with your commit hash
git commit -m "Revert to 56e05fced"

6) Updates working copy to reflect the new commit
git reset --hard

7) Push your changes to respective branch
git push -f
